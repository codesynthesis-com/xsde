# file      : cxx/hybrid/buildfile
# license   : not copyrighted - public domain

./: doc{README}

# Note that hybrid mapping requires support for base parser/serializer reuse.
#
ru = ($reuse_style != 'none')

# Note that most of the hybrid mapping example programs don't provide a
# default allocator.
#
da = (!$custom_allocator || $default_allocator)

./: allocator/: include = ($custom_allocator && !$default_allocator && \
                           !$stl                                    && \
                           !$iostream                               && \
                           !$exceptions                             && \
                           $ru)

./: compositors/:  include = ($ru && $da)
./: filter/:       include = ($stl && $iostream && $exceptions && $ru && $da)
./: hello/:        include = ($iostream && $exceptions && $ru && $da)
./: library/:      include = ($stl && $iostream && $exceptions && $ru && $da)
./: minimal/:      include = (!$stl && !$iostream && !$exceptions && $ru && $da)
./: multiroot/:    include = ($iostream && $exceptions && $ru && $da)
./: polymorphism/: include = ($polymorphic && $iostream && $exceptions && $ru && $da)
./: polyroot/:     include = ($polymorphic && $iostream && $exceptions && $ru && $da)
./: streaming/:    include = ($iostream && $exceptions && $ru && $da)
./: wildcard/:     include = ($stl && $iostream && $exceptions && $ru && $da)

./: binary/ custom/ evolution/
