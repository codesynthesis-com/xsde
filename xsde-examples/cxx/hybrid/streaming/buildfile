# file      : cxx/hybrid/streaming/buildfile
# license   : not copyrighted - public domain

if ($build.meta_operation != 'dist')
{
  assert ($iostream) \
    "config.xsde_examples.iostream should be set to true for this example"

  assert ($exceptions) \
    "config.xsde_examples.exceptions should be set to true for this example"

  assert ($reuse_style != 'none') \
    "config.xsde_examples.reuse_style should not be set to 'none' for this example"

  assert (!$custom_allocator || $default_allocator) \
    "config.xsde_examples.default_allocator should be set to true for this example"
}

import libs = libxsde%liba{xsde}

./: exe{driver} doc{README}

exe{driver}: {hxx     cxx}{* -position -position-pskel -position-pimpl  \
                                       -position-sskel -position-simpl} \
             {hxx ixx cxx}{   position  position-pskel  position-sskel} \
             {hxx     cxx}{             position-pimpl  position-simpl} \
             $libs

exe{driver}: xml{position}: test.input = true

<{hxx ixx cxx}{position position-pskel position-sskel}                       \
 {hxx     cxx}{         position-pimpl position-simpl}>: xsd{position} $xsde
{{
  # For options contained in cxx_hybrid_options variable see build/root.build.
  #
  $xsde cxx-hybrid $cxx_hybrid_options               \
        --generate-parser                            \
        --generate-serializer                        \
        --generate-aggregate                         \
        --custom-parser object=/object-pimpl.hxx     \
        --custom-serializer object=/object-simpl.hxx \
        --output-dir $out_base                       \
        $path($<[0])
}}

cxx.poptions =+ "-I$out_base" "-I$src_base"
