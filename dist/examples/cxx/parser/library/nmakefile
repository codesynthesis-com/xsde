root = ..\..\..\..

!include $(root)\build\cxx\rules.nmake

# Build.
#
EXTRA_CPPFLAGS = /I$(root)\libxsde

!if "$(XSDE_LONGLONG)" == "n"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --no-long-long
!endif

!if "$(XSDE_PARSER_VALIDATION)" == "n"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --suppress-validation
!endif

!if "$(XSDE_REUSE_STYLE)" == "mixin"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --reuse-style-mixin
!endif

!if "$(XSDE_POLYMORPHIC)" == "y"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --runtime-polymorphic
!endif

!if "$(XSDE_REUSE_STYLE)" == "mixin"
impl = library-pimpl-mixin
!else
impl = library-pimpl-tiein
!endif

driver.exe: driver.obj library-pskel.obj $(impl).obj $(root)\libxsde\xsde\xsde.lib

driver.obj: driver.cxx $(impl).hxx library-pskel.hxx library.hxx
$(impl).obj: $(impl).cxx $(impl).hxx library-pskel.hxx library.hxx
library-pskel.obj: library-pskel.cxx library-pskel.hxx library.hxx


library-pskel.hxx library-pskel.cxx: library.xsd library.map
	$(root)\bin\xsde.exe cxx-parser $(XSDFLAGS) $(EXTRA_XSDFLAGS) \
--type-map library.map library.xsd


# Test.
#
test: driver.exe library.xml
	.\driver.exe library.xml


# Clean.
#
clean:
	-del library-pskel.?xx $(impl).obj library-pskel.obj driver.obj driver.exe

